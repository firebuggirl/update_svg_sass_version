/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* import extends and mixins */
/*
 To later include font-face mixin:

 @include font-face('abolition-regular', abolition-regular);

*/
/*
 To later include text mixin:

 @include text(1em, 1.5, $color:$color-text-base); Note: because of "NULL" can skip over values

*/
/* To include, create .btn selector in _bass.scss .btn{@include bg-colors($ui-colors);}  */
/* Top down grey to white color gradient */
/* left to right grey to white color gradient */
/* To include in styles: ex: padding: em(48px) 0; font-size: em(42px);  */
/*To call palette function in style rule:
  h1{
  color: palette(grey, x-dark);
} */
/* import variables */
/* To use these as color values in our style rules,
use map-get function.
Ex:
h1{
color: map-get(map-get($palettes, grey), x-dark);
}

But, too long so
create @function pallette in _functions.scss to do the work */
/*To call palette function in style rule:
  h1{
  color: palette(grey, x-dark);
} */
/*Create a Sass map to give base colors a theme name..comes in handy later when
creating class names for ui elements like buttons, etc.. Then create an
each directive (in mixins partial) to dynamically create a class name for each key in our map below*/
/* Classes created:
.btn--default
.btn--success
.btn--error
.btn--warning
.btn--info
*/
body {
  margin: 0;
  padding: 0;
  text-align: center;
  font-family: 'Roboto Slab', serif;
  font-weight: 300;
  color: #2D3339;
  background: url("../out/background.svg") #edeff0;
  background-size: 53px 53px; }

#container {
  max-width: 960px;
  background: #fff;
  margin: 0 auto; }

p {
  max-width: 350px;
  margin: 2.1875em auto 0;
  line-height: 2em;
  text-align: left; }
  @media (max-width: 320px) {
    p {
      font-size: 16px; } }

/* Better for SEO to position text off screen with negative values rather
   then using display: none  */
#logo-text {
  position: absolute;
  top: -10000px;
  left: -10000px; }

#logo {
  height: 150px;
  width: 150px; }

header:hover #logo {
  animation: turn 1.1s .2s ease-out forwards; }

#corgi-red, #corgi-fawn,
#corgi-sable, #corgi-blacktan {
  height: 200px;
  width: 200px; }

main {
  padding-top: 50px;
  margin-bottom: 100px; }
  main > h2 {
    font-size: 28px; }

main ul {
  padding: 0; }
  @media (max-width: 768px) {
    main ul {
      display: flex;
      -moz-display: flex;
      flex-wrap: wrap;
      -webkit-flex-wrap: wrap;
      justify-content: center;
      -webkit-justify-content: center;
      max-width: 70%;
      margin: 0 auto; } }
  main ul > li {
    display: inline-block;
    color: #ba8058;
    margin-right: 20px; }

main li img {
  margin-bottom: 15px; }

main li span {
  margin-left: -40px; }

main li:last-child {
  margin-right: 0; }

footer {
  padding-bottom: 30px; }

a {
  text-decoration: none;
  color: #39add1;
  font-weight: 700; }

a:hover {
  color: #2D3339;
  fill: #2D3339; }

a:hover .nav-hover {
  fill: #2D3339;
  /*animation: bounce .5s ease-out forwards;*/
  animation: turn 1.1s .2s ease-out forwards; }

header {
  padding-top: 10px; }

#container > header nav {
  padding-bottom: 50px;
  text-align: left; }
  @media (max-width: 768px) {
    #container > header nav {
      text-align: center; } }

header nav ul li {
  display: inline-block;
  margin-right: 20px; }
  @media (max-width: 320px) {
    header nav ul li {
      display: flex;
      -moz-display: flex;
      justify-content: center;
      -webkit-justify-content: center;
      margin-left: -22%;
      padding-bottom: 2px; } }

header h1 {
  line-height: 1em; }

#nav-contact,
#nav-heart {
  height: 13px;
  fill: #39add1; }

#nav-location {
  height: 14px;
  fill: #39add1; }

/*@import "footer";*/
/* --------------------------
  SVG Main Fills
--------------------------- */
#logo-paw {
  fill: #f4c6a6; }

#corgi-red-face, #corgi-red-left-ear, #corgi-red-right-ear,
#corgi-sable-eyebrows, #blacktan-eyebrows,
#blacktan-ears, #logo-background {
  fill: #ba8058; }

#corgi-red-eyes-nose, #fawn-eyes-nose,
#sable-nose-eyes, #blacktan-eyes-nose {
  fill: #2D3339; }

#corgi-red-eyebrows {
  fill: #EAAA7F; }

#corgi-red-beak, #fawn-beak,
#sable-beak, #blacktan-beak {
  fill: #fbfeff; }

#fawn-left-ear, #fawn-right-ear,
#fawn-face {
  fill: #EAAA7F; }

#fawn-eyebrows {
  fill: #F2C3A2; }

#sable-face, #sable-left-ear,
#sable-right-ear {
  fill: #844B24; }

#blacktan-face {
  fill: #52595f; }

/* --------------------------
Keyframes
--------------------------- */
@keyframes slide {
  50% {
    transform: translate3d(0, -10px, 0); }
  80% {
    transform: translate3d(0, 10px, 0); }
  100% {
    transform: translate3d(0, 0, 0); } }
@keyframes grow {
  0% {
    transform: scale(0); }
  30% {
    transform: scale(1.1); }
  60% {
    transform: scale(0.9); } }
@keyframes turn {
  0% {
    transform: rotate(0) scale(0);
    opacity: 0; }
  60% {
    transform: rotate(375deg) scale(1.1); }
  80% {
    transform: rotate(355deg) scale(0.9);
    /*Scale & rotate backwards for bounce effect*/ }
  100% {
    transform: rotate(360deg) scale(1); } }
@keyframes pulse {
  50% {
    transform: scale(1.1); } }
/* Animate the offset in a path's stroke*/
@keyframes offset {
  100% {
    stroke-dashoffset: 0; } }
/* Fill text of #logo-brand on page load after fill set to transparent in html */
@keyframes fill-brand {
  100% {
    fill: #EAAA7F; } }
@keyframes fill-nav {
  100% {
    fill: #39add1; } }
@keyframes fill-hover {
  100% {
    fill: #2D3339; } }
/* --------------------------
  SVG Styles
--------------------------- */
.nav-hover {
  stroke: #EAAA7F;
  stroke-width: 1;
  stroke-dasharray: 50;
  /* controls the pattern of dashes and gaps used to stroke paths */
  stroke-dashoffset: 50;
  /* sets the offset distance of the dashes in a path's stroke */
  animation: offset 5s linear forwards, fill-nav .8s 1s forwards; }

.nav-hover:hover {
  stroke: #2D3339;
  stroke-width: 1;
  stroke-dasharray: 50;
  /* create/get stroke length*/
  stroke-dashoffset: 50;
  /* moves dashes and gaps- For single line paths use same value as dasharray to get live drawing effect */
  animation: offset 5s linear forwards, fill-hover .8s 1s forwards; }

#logo-brand {
  stroke: #EAAA7F;
  stroke-width: 1;
  stroke-dasharray: 250;
  /* create/get stroke length*/
  stroke-dashoffset: 250;
  /* moves dashes and gaps- For single line paths use same value as dasharray to get live drawing effect */
  animation: offset 5s linear forwards, fill-brand .8s 1s forwards;
  /* linear time function = time speed, beginning to end- Forward = browser end animation on final keyframe */ }

/* Nose and eye animations and transforms*/
.dogs:hover path#corgi-red-eyes-nose {
  animation: pulse .3s .5s;
  /* Pulse, animation duration, delay*/ }

.dogs:hover path#sable-nose-eyes {
  animation: pulse .3s .5s; }

.dogs:hover path#fawn-eyes-nose {
  transform: scale(1.06);
  display: block;
  padding-top: 1px; }

.dogs:hover path#blacktan-eyes-nose {
  transform: scale(1.06);
  display: block; }

/* Eyebrow animations */
.dogs:hover path#corgi-red-eyebrows {
  animation: grow 1.2s ease-out backwards; }

.dogs:hover path#corgi-sable-eyebrows {
  animation: grow 1.2s ease-out backwards; }

.dogs:hover path#fawn-eyebrows {
  animation: slide .5s forwards; }

.dogs:hover path#blacktan-eyebrows {
  animation: slide .5s forwards; }

/* Transitions and Tranfomrs*/
.dogs * {
  transform-origin: 0px 0px;
  /* Use pixels based on x and Y coordinates instead of % for support in FireFox, Chrome, and Safari */ }

/* Ear transforms */
#corgi-red-ears, #sable-ears, #blacktan-ears, #fawn-ears {
  transition: .4s ease;
  /*transform-origin: (0px, 0px);*/ }

.dogs:hover #corgi-red-ears {
  transform: rotate(1.5deg); }

.dogs:hover #sable-ears {
  transform: rotate(1.5deg); }

.dogs:hover #blacktan-ears {
  transform: rotate(1.5deg); }

.dogs:hover #fawn-ears {
  transform: rotate(1.5deg); }

@media (max-width: 768px) {
  #sticky-nav {
    position: fixed;
    background-color: #52595f;
    width: 100%;
    top: 0;
    z-index: 2; }

  #container > header nav {
    padding-bottom: 10px; }

  #nav-contact,
  #nav-heart,
  #nav-location {
    fill: #39add1; }

  a {
    color: #ba8058; }

  #branding {
    margin-top: 100px; }

  footer {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    padding-left: 5%;
    padding-right: 5%;
    z-index: 10;
    display: flex;
    -moz-display: flex;
    justify-content: center;
    -webkit-justify-content: center;
    align-self: center;
    -moz-align-self: center;
    width: 100%;
    padding-right: 0px;
    padding-left: 0px;
    margin-top: 200px;
    padding-bottom: 30px;
    padding-top: 30px;
    color: #ba8058;
    background-color: #52595f; }

  #year {
    color: #39add1; } }
@media (max-width: 419px) {
  #container > header nav {
    display: flex;
    -moz-display: flex;
    justify-content: center;
    -webkit-justify-content: center;
    margin: 0px; }

  main ul {
    margin-left: 20%; }

  #logo-brand {
    display: none; }

  /* Unhide h1 Logo Brand */
  #logo-text {
    position: relative;
    display: block;
    top: 5px;
    left: 5px;
    color: #ba8058; } }
@media (max-width: 320px) {
  header {
    margin-top: 5%; }

  #logo {
    margin-top: -5%; }

  main {
    margin-bottom: 60px;
    padding-bottom: 10px; }

  footer {
    height: 2px;
    display: flex;
    -moz-display: flex;
    justify-content: center;
    -webkit-justify-content: center;
    align-self: center;
    -moz-align-self: center; } }

/*# sourceMappingURL=main.css.map */
